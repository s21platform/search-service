name: Dev CI/CD to Development server
on:
  pull_request:
    branches:
      - main

jobs:
  linters:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.57.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run golangci-lint
        run: |
          golangci-lint run

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: linters
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Run tests
        run: go test -coverprofile=coverage.out -tags=test -v ./...

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  build_and_push:
    name: Build and Push Image to YC
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Yandex CR Login
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEY }}
      - name: Build and Push to YC
        run: |
          docker build -t ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop .
          docker push ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop
#          docker build -t ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}-migrate:develop ./migrations
#          docker push ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}-migrate:develop
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEVELOP }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_SSH_KEY_DEVELOP }}
          passphrase: ${{ secrets.PASSPHRASE_DEVELOP }}
          script: |
            docker pull ${{ secrets.CR_REGISTRY }}/${{ secrets.CR_NAME }}:develop
            docker-compose -f ~/space21/staging/staging-deployment/docker-compose.yml --env-file ~/space21/staging/.env up -d ${{ secrets.CR_NAME }}